volumes:
  prometheus_data: {}
  grafana_data: {}
  phlare_data: {}

networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 192.167.10.0/26

services:
  node0:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: node0
    volumes:
      - ./build/node0:/home/evmos
      - ./node.sh:/root/.evmosd/node.sh
      - ./node_transfer.sh:/root/.evmosd/node_transfer.sh
    ports:
      - "6060:6060"
      - "26659-26660:26656-26657"
      - "8545:8545"
      - "1317:1317"
    user: "root"
    command:
      - /root/.evmosd/node.sh
    networks:
      localnet:
        ipv4_address: 192.167.10.2
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  node1:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: node1
    volumes:
      - ./build/node1:/home/evmos
      - ./node.sh:/root/.evmosd/node.sh
    ports:
      - "6061:6060"
    user: "root"
    command:
      - /root/.evmosd/node.sh
    networks:
      localnet:
        ipv4_address: 192.167.10.3
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  node2:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: node2
    volumes:
      - ./build/node2:/home/evmos
      - ./node.sh:/root/.evmosd/node.sh
    ports:
      - "6062:6060"
    user: "root"
    command:
      - /root/.evmosd/node.sh
    networks:
      localnet:
        ipv4_address: 192.167.10.4
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  node3:
    image: tharsishq/evmos:v20.0.0
    restart: always
    container_name: node3
    volumes:
      - ./build/node3:/home/evmos
      - ./node.sh:/root/.evmosd/node.sh
    ports:
      - "6063:6060"
    user: "root"
    command:
      - /root/.evmosd/node.sh
    networks:
      localnet:
        ipv4_address: 192.167.10.5
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:26657/status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus-full.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      localnet:
        ipv4_address: 192.167.10.7

  grafana:
    image: grafana/grafana:main
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 8000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
    networks:
      localnet:
        ipv4_address: 192.167.10.8

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
    privileged: true
    restart: always
    deploy:
      mode: global
    networks:
      localnet:
        ipv4_address: 192.167.10.10

  phlare:
    image: grafana/phlare:latest
    container_name: phlare
    ports:
      - "4100:4100"
    command: -config.file=/etc/phlare/config.yaml
    volumes:
      - phlare_data:/data
      - ./phlare/phlare-full.yaml:/etc/phlare/config.yaml
    restart: always

#  tx-bot1:
#    image: evmos/tx-bot-dev
#    build:
#      context: .
#      dockerfile: Dockerfile.bot
#    container_name: tx-bot1
#    depends_on:
#      - node0
#    networks:
#      - localnet
#    volumes:
#      - ./build/node0/key_priv.hex:/tmp/key_priv.hex
#    entrypoint: [ "sh", "-c", "export ORCH_PRIV_KEY=$(cat /tmp/key_priv.hex) && node ./dist/index.js" ]
#    environment:
#      - RPC_URL=http://node0:8545
#      - API_URL=http://node0:1317
#      - LOG_LEVEL=info
#      - NUMBER_OF_WORKERS=3
#      - WORKER_TYPES=gasConsumer,ethSender
#    restart: always